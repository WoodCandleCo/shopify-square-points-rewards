{% comment %}
  Loyalty Widget App Embed - Injects loyalty functionality site-wide
{% endcomment %}

<script>
// Auto-inject loyalty widget into cart areas
(function() {
  'use strict';
  
  const CONFIG = {
    domain: '{{ block.settings.domain }}' || 'https://d2b10059-cd1b-49b3-b52e-e46e3944e1ab.lovableproject.com'
  };

  const containerSelectors = [
    '.cart-actions',
    '.cart__summary-totals .cart-actions',
    '.cart__footer',
    '.cart-footer',
    '.cart__totals',
    '.cart-totals',
    '.cart-drawer__footer',
    '.cart-drawer',
    '.drawer--cart',
    '.cart-drawer__content',
    '.drawer__content',
    '[data-cart-drawer]',
    '.mini-cart',
    '.mini-cart__content',
    '.ajaxcart__inner',
    '.cart-items'
  ];

  const anchorSelectors = [
    '.cart__footer',
    '.cart-footer',
    '.cart-drawer__footer',
    '.mini-cart__footer',
    '.drawer__footer',
    '.totals',
    '.cart__blocks'
  ];

  function findCartContainer() {
    for (const selector of containerSelectors) {
      const el = document.querySelector(selector);
      if (el) {
        console.log(`Found cart container with: ${selector}`);
        return el;
      }
    }
    return null;
  }

  function insertWidget(container) {
    try {
      if (!container) return false;

      let widget = document.getElementById('loyalty-widget');
      if (!widget) {
        widget = document.createElement('div');
        widget.id = 'loyalty-widget';
        widget.className = 'loyalty-widget';
      }

      // Prefer inserting above special instructions (cart note) if present
      const noteSelectors = [
        '.cart-note','cart-note','[data-cart-note]','textarea[name="note"]',
        '#CartSpecialInstructions','.cart__note','.cart__note-container','.cart__note-wrapper',
        '.order-special-instructions','[id*="CartNote"]','[id*="SpecialInstructions"]'
      ];
      let noteEl = null;
      for (const sel of noteSelectors) {
        const el = container.querySelector(sel);
        if (el) { noteEl = el; break; }
      }
      if (noteEl) {
        const noteAnchor = noteEl.closest('.cart__block, .cart__row, .cart-drawer__note, .cart-note, .cart__note, .field, .cart__blocks > *') || noteEl;
        noteAnchor.parentNode?.insertBefore(widget, noteAnchor);
      } else {
        // Otherwise insert before footer/checkout area inside the container
        let anchor = null;
        for (const sel of anchorSelectors) {
          const el = container.querySelector(sel);
          if (el) { anchor = el; break; }
        }
        
        if (anchor && anchor.parentNode) {
          anchor.parentNode.insertBefore(widget, anchor);
        } else {
          container.insertBefore(widget, container.firstChild);
        }
      }

      if (!widget.dataset.initialized) {
        setTimeout(() => { 
          try { 
            initializeLoyaltyWidget(); 
          } catch (e) { 
            console.warn('Loyalty widget init error', e); 
          } 
        }, 120);
        widget.dataset.initialized = 'true';
      }

      console.log('Loyalty widget embedded');
      return true;
    } catch (e) {
      console.error('Failed to embed loyalty widget', e);
      return false;
    }
  }

  function tryInject() {
    const container = findCartContainer();
    if (container) {
      return insertWidget(container);
    }
    return false;
  }

  function init() {
    console.log('Loyalty widget embed loaded');
    
    // Initial attempt
    let injected = tryInject();

    // Retry for dynamic content
    let attempts = 0;
    const maxAttempts = 20;
    const interval = setInterval(() => {
      if (injected || attempts >= maxAttempts) {
        clearInterval(interval);
        return;
      }
      attempts++;
      injected = tryInject();
    }, 500);

    // Observe DOM changes
    const observer = new MutationObserver((mutations) => {
      for (const m of mutations) {
        if (m.addedNodes && m.addedNodes.length) {
          const addedEls = Array.from(m.addedNodes).filter(n => n instanceof HTMLElement);
          if (addedEls.some(el => containerSelectors.some(sel => el.matches?.(sel) || el.querySelector?.(sel)))) {
            setTimeout(tryInject, 50);
          }
        }
      }
    });
    observer.observe(document.body, { childList: true, subtree: true });

    // Listen for cart events
    ['cart:updated','cart:refresh','cart:change','cart-drawer:open','ajaxCart.afterCartLoad'].forEach(evt => {
      document.addEventListener(evt, () => setTimeout(tryInject, 80));
    });
  }

  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', init);
  } else {
    init();
  }

  // Load widget functionality with cache-busting
  const widgetScript = document.createElement('script');
  const version = String(Math.floor(Date.now() / 1000));
  widgetScript.innerHTML = `
    // Loyalty widget functionality
    function initializeLoyaltyWidget() {
      const widget = document.getElementById('loyalty-widget');
      if (!widget) return;
      
      widget.innerHTML = \`
        <div class="loyalty-widget__header" onclick="toggleLoyalty()">
          <h3 class="loyalty-widget__title">üéÅ Loyalty Rewards</h3>
          <span class="loyalty-widget__toggle">+</span>
        </div>
        <div class="loyalty-widget__content" id="loyalty-content">
          <div class="loyalty-widget__loading" id="loyalty-loading">
            Loading...
          </div>
          <div id="loyalty-login" style="display: none;">
            <p>Enter your phone number to check rewards:</p>
            <input type="tel" id="loyalty-phone" class="loyalty-widget__input" placeholder="(555) 123-4567">
            <button onclick="connectLoyalty()" class="loyalty-widget__button">Connect Account</button>
          </div>
          <div id="loyalty-account" style="display: none;">
            <div class="loyalty-widget__balance">
              <div>Points Balance: <strong id="loyalty-points">0</strong></div>
            </div>
            <div id="loyalty-rewards"></div>
            <button onclick="showLoyaltyLogin()" class="loyalty-widget__button" style="background: #6c757d;">Switch Account</button>
          </div>
        </div>
      \`;
      
      // Try to load existing customer data
      setTimeout(() => {
        loadCustomerLoyalty();
      }, 500);
    }
    
    function toggleLoyalty() {
      const content = document.getElementById('loyalty-content');
      const toggle = document.querySelector('.loyalty-widget__toggle');
      if (content.classList.contains('open')) {
        content.classList.remove('open');
        toggle.textContent = '+';
      } else {
        content.classList.add('open');
        toggle.textContent = '‚àí';
      }
    }
    
    async function loadCustomerLoyalty() {
      try {
        showLoading();
        
        const response = await fetch('\${CONFIG.domain}/api/loyalty/account', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ customerId: window.Shopify?.customer?.id })
        });
        
        if (response.ok) {
          const data = await response.json();
          if (data.account) {
            showLoyaltyAccount(data.account, data.rewards || []);
          } else {
            showLoyaltyLogin();
          }
        } else {
          showLoyaltyLogin();
        }
      } catch (error) {
        console.error('Error loading loyalty data:', error);
        showLoyaltyLogin();
      }
    }
    
    async function connectLoyalty() {
      const phone = document.getElementById('loyalty-phone').value.trim();
      if (!phone) {
        alert('Please enter your phone number');
        return;
      }
      
      try {
        showLoading();
        
        const response = await fetch('\${CONFIG.domain}/api/loyalty/lookup', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ phone })
        });
        
        const data = await response.json();
        
        if (data.account) {
          showLoyaltyAccount(data.account, data.rewards || []);
        } else {
          alert('No loyalty account found for this phone number');
          showLoyaltyLogin();
        }
      } catch (error) {
        console.error('Error connecting loyalty account:', error);
        alert('Error connecting to loyalty program');
        showLoyaltyLogin();
      }
    }
    
    async function redeemReward(rewardId, discountCode) {
      try {
        const response = await fetch('\${CONFIG.domain}/api/loyalty/redeem', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ rewardId })
        });
        
        if (response.ok) {
          await applyDiscountCode(discountCode);
          loadCustomerLoyalty(); // Refresh the display
        } else {
          alert('Failed to redeem reward');
        }
      } catch (error) {
        console.error('Error redeeming reward:', error);
        alert('Error redeeming reward');
      }
    }
    
    function applyDiscountCode(code) {
      if (window.Shopify && window.Shopify.cart) {
        // Try Shopify's cart API
        fetch('/cart/update.js', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ attributes: { discount_code: code } })
        }).then(() => {
          window.location.reload();
        });
      } else {
        // Fallback to manual application
        const url = '/discount/' + encodeURIComponent(code);
        window.location.href = url;
      }
    }
    
    function showLoading() {
      document.getElementById('loyalty-loading').style.display = 'block';
      document.getElementById('loyalty-login').style.display = 'none';
      document.getElementById('loyalty-account').style.display = 'none';
    }
    
    function showLoyaltyLogin() {
      document.getElementById('loyalty-loading').style.display = 'none';
      document.getElementById('loyalty-login').style.display = 'block';
      document.getElementById('loyalty-account').style.display = 'none';
    }
    
    function showLoyaltyAccount(account, rewards) {
      document.getElementById('loyalty-loading').style.display = 'none';
      document.getElementById('loyalty-login').style.display = 'none';
      document.getElementById('loyalty-account').style.display = 'block';
      
      document.getElementById('loyalty-points').textContent = account.points || 0;
      
      const rewardsContainer = document.getElementById('loyalty-rewards');
      rewardsContainer.innerHTML = '';
      
      if (rewards && rewards.length > 0) {
        rewards.forEach(reward => {
          const rewardDiv = document.createElement('div');
          rewardDiv.className = 'loyalty-widget__reward';
          rewardDiv.innerHTML = \`
            <span class="loyalty-widget__reward-text">\${reward.name} - \${reward.points} pts</span>
            <button onclick="redeemReward('\${reward.id}', '\${reward.discount_code}')" class="loyalty-widget__redeem-btn">Redeem</button>
          \`;
          rewardsContainer.appendChild(rewardDiv);
        });
      } else {
        rewardsContainer.innerHTML = '<p style="text-align: center; color: #666; font-size: 14px;">No rewards available</p>';
      }
    }
  `;
  document.head.appendChild(widgetScript);

})();
</script>

<style>
.loyalty-widget {
  background: #f8f9fa;
  border: 1px solid #e9ecef;
  border-radius: 8px;
  padding: 16px;
  margin: 16px 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
}

.loyalty-widget__header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  cursor: pointer;
  margin-bottom: 12px;
}

.loyalty-widget__title {
  font-weight: 600;
  font-size: 16px;
  color: #333;
  margin: 0;
}

.loyalty-widget__toggle {
  font-size: 18px;
  font-weight: bold;
  color: #007bff;
}

.loyalty-widget__content {
  display: none;
}

.loyalty-widget__content.open {
  display: block;
}

.loyalty-widget__balance {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  color: white;
  padding: 12px;
  border-radius: 6px;
  text-align: center;
  margin-bottom: 16px;
}

.loyalty-widget__input {
  width: 100%;
  padding: 8px 12px;
  border: 1px solid #ddd;
  border-radius: 4px;
  margin-bottom: 12px;
  font-size: 14px;
  box-sizing: border-box;
}

.loyalty-widget__button {
  background: #007bff;
  color: white;
  border: none;
  padding: 10px 16px;
  border-radius: 4px;
  cursor: pointer;
  font-size: 14px;
  font-weight: 500;
  width: 100%;
  margin-bottom: 8px;
  transition: background-color 0.2s;
}

.loyalty-widget__button:hover {
  background: #0056b3;
}

.loyalty-widget__button:disabled {
  background: #ccc;
  cursor: not-allowed;
}

.loyalty-widget__reward {
  padding: 8px 12px;
  border: 1px solid #28a745;
  border-radius: 4px;
  margin-bottom: 8px;
  background: #f8fff9;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.loyalty-widget__reward-text {
  font-size: 14px;
  color: #333;
}

.loyalty-widget__redeem-btn {
  background: #28a745;
  color: white;
  border: none;
  padding: 4px 8px;
  border-radius: 3px;
  font-size: 12px;
  cursor: pointer;
}

.loyalty-widget__redeem-btn:hover {
  background: #1e7e34;
}

.loyalty-widget__loading {
  text-align: center;
  padding: 20px;
  color: #666;
}
</style>

{% schema %}
{
  "name": "Loyalty Program Widget",
  "target": "head",
  "settings": [
    {
      "type": "text",
      "id": "domain",
      "label": "Lovable Project Domain",
      "default": "https://d2b10059-cd1b-49b3-b52e-e46e3944e1ab.lovableproject.com",
      "info": "Your Lovable app domain"
    }
  ]
}
{% endschema %}